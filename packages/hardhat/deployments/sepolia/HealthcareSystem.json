{
  "address": "0xA9A97040A3B4661051025F9d0fb2639341cc3B76",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "date",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "time",
          "type": "string"
        }
      ],
      "name": "AppointmentRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "GrantAccessFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RecordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RecordUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "acceptAppointment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_diagnosis",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_treatment",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_imageUrl",
          "type": "string"
        }
      ],
      "name": "addRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "confirmRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "doctorList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doctors",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "major",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getAppointments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patientaddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "doctoraddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Structures.Appointment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "getDoctorInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "major",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "getDoctors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "getDoctorsList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "getNumberofDoctors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "getNumberofPatients",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "getPatientInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "phone",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dob",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bloodType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "height",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "weight",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "houseAddr",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "allergies",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "diagnosis",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "treatment",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageUrl",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "createdTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Structures.Record[]",
          "name": "records",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "recordCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "getPatientsList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "getRequestedAppointments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "patientaddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "doctoraddr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Structures.Appointment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "getRequestedDoctors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "getRequestedDoctorsList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "grantAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isDoctor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "patientList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "phone",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dob",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bloodType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "height",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "weight",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "houseAddr",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "allergies",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "recordCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        }
      ],
      "name": "removeDoctors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "requestAccess",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "requestAppointment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestedDoctorList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctors",
          "type": "address"
        }
      ],
      "name": "revokeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_major",
          "type": "string"
        }
      ],
      "name": "setDoctorProfile",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_phone",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dob",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_gender",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bloodType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_height",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_weight",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_houseAddr",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_allergies",
          "type": "string"
        }
      ],
      "name": "setPatientProfile",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd2cdf464ffe5d26af4c53215e8d1d90f5ec47ef373db86a52731d8e4f303fd18",
  "receipt": {
    "to": null,
    "from": "0xD982C5316f89Df58424D92a91e0C82d5F71C1758",
    "contractAddress": "0xA9A97040A3B4661051025F9d0fb2639341cc3B76",
    "transactionIndex": 64,
    "gasUsed": "3933829",
    "logsBloom": "0x
    "blockHash": "0xb9a981c6235eb88ccdfe9e25d065deb3583340d411b3e6ec5346803076c418c0",
    "transactionHash": "0xd2cdf464ffe5d26af4c53215e8d1d90f5ec47ef373db86a52731d8e4f303fd18",
    "logs": [],
    "blockNumber": 6743393,
    "cumulativeGasUsed": "17104295",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "547061ebbf10d726b00176fc5566ab67",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"date\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"}],\"name\":\"AppointmentRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"GrantAccessFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"acceptAppointment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_diagnosis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_treatment\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageUrl\",\"type\":\"string\"}],\"name\":\"addRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"confirmRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doctors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"major\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getAppointments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patientaddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctoraddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Structures.Appointment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"getDoctorInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"major\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"getDoctors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getDoctorsList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"getNumberofDoctors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"getNumberofPatients\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getPatientInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dob\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bloodType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"height\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"weight\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"houseAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"allergies\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"diagnosis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"treatment\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structures.Record[]\",\"name\":\"records\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"recordCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"getPatientsList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"getRequestedAppointments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"patientaddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"doctoraddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Structures.Appointment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getRequestedDoctors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"getRequestedDoctorsList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDoctor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPatient\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patientList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dob\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bloodType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"height\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"weight\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"houseAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"allergies\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"recordCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"}],\"name\":\"removeDoctors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"requestAccess\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"requestAppointment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestedDoctorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctors\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_major\",\"type\":\"string\"}],\"name\":\"setDoctorProfile\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dob\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bloodType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_height\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_weight\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_houseAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_allergies\",\"type\":\"string\"}],\"name\":\"setPatientProfile\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HealthcareSystem.sol\":\"HealthcareSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AdminManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"./Structures.sol\\\";\\n\\ncontract AdminManagement is Structures{\\n\\n    // getNumberofDoctors\\n    function getNumberofDoctors(address _admin) public view onlyAdmin(_admin) returns (uint) {\\n        return doctorList.length;\\n    }\\n\\n    // getDoctor\\n    function getDoctors(address _admin) public view onlyAdmin(_admin) returns(address[] memory) {\\n        return doctorList;\\n    }\\n\\n    // getNumberofPatients\\n    function getNumberofPatients(address _admin) public view onlyAdmin(_admin) returns (uint) {\\n        return patientList.length;\\n    }\\n\\n    // get requested list\\n    function getRequestedDoctorsList(address _admin) public view onlyAdmin(_admin) returns (address[] memory) {\\n      return requestedDoctorList;\\n    }\\n\\n    // confirm Doctor registration request\\n    function confirmRegistration(address _doctor) public onlyAdmin(msg.sender) {\\n      require(!isDoctor[_doctor], \\\"This person is already a doctor\\\");\\n\\n      bool check = false;\\n\\n      for (uint i = 0; i < requestedDoctorList.length; i++) {\\n          if (requestedDoctorList[i] == _doctor) {\\n            check = true;\\n          }\\n\\n          if (check == true && i < requestedDoctorList.length - 1) {\\n            requestedDoctorList[i] = requestedDoctorList[i + 1];\\n          }\\n      }\\n\\n      requestedDoctorList.pop();\\n\\n      if (check == false) {\\n        revert(\\\"This address has not registered yet\\\");\\n      } else {\\n        doctorList.push(_doctor);\\n        isDoctor[_doctor] = true;\\n      }     \\n    }\\n\\n    // Remove Doctor\\n    function removeDoctors(address _doctor) public onlyAdmin(msg.sender) {\\n        require(isDoctor[_doctor], \\\"This person is not a doctor\\\");\\n\\n        bool mark = false;\\n\\n        // Remove from the general array\\n        for (uint i = 0; i < doctorList.length; i++) {\\n          if (doctorList[i] == _doctor) {\\n              mark = true;\\n          }\\n\\n          if (mark == true && i < doctorList.length - 1) {\\n            doctorList[i] = doctorList[i + 1];\\n          }\\n        }\\n\\n        doctorList.pop();\\n\\n        // Remove from the patients' lists\\n        for (uint i = 0; i < patientList.length; i++) {\\n          if (patients[patientList[i]].authorizedDoctors[_doctor]) {\\n\\n            address[] storage list = patients[patientList[i]].doctorsList;\\n\\n            bool check = false;\\n\\n            for (uint j = 0; j < list.length; j++) {\\n              if (list[i] == _doctor) {\\n                check = true;\\n              }\\n\\n              if (check == true) {\\n                list[i] = list[i + 1];\\n              }\\n            }\\n\\n            list.pop();\\n          }\\n        }\\n\\n        isDoctor[_doctor] = false;\\n    }\\n}\",\"keccak256\":\"0x5033e16ac2730f402e133ba1cb8ac57492e109a4725918090b180ce8b9ba7385\",\"license\":\"MIT\"},\"contracts/DoctorManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"./Structures.sol\\\";\\n\\ncontract DoctorManagement is Structures{\\n\\n    // Doctors set their profile\\n    function setDoctorProfile(string memory _name, string memory _major) public payable {\\n\\n        require(!isDoctor[msg.sender], \\\"Doctor profile already exists!\\\");\\n        require(!isPatient[msg.sender], \\\"You are already a patient!\\\");\\n\\n        for (uint i = 0; i < requestedDoctorList.length; i++) {\\n          if (msg.sender == requestedDoctorList[i]) {\\n            revert(\\\"You already requested to be a doctor\\\");\\n          }\\n        }\\n\\n        Doctor storage doctor = doctors[msg.sender];\\n        doctor.name = _name;\\n        doctor.major = _major;\\n\\n        requestedDoctorList.push(msg.sender);\\n    }\\n\\n    // Request from doctors\\n    function requestAccess(address _patient) public payable {\\n\\n      require(isDoctor[msg.sender], \\\"Only doctors can request access\\\");\\n      require(isPatient[_patient], \\\"The address should be a patient\\\");\\n      \\n      Patient storage patient = patients[_patient];\\n\\n      for (uint i = 0; i < patient.requestedDoctors.length; i++) {\\n        if (msg.sender == patient.requestedDoctors[i]) {\\n            revert(\\\"You have already required access\\\");\\n        }\\n      }\\n\\n      for (uint i = 0; i < patient.doctorsList.length; i++) {\\n        if (msg.sender == patient.doctorsList[i]) {\\n            revert(\\\"You are already in the doctor list\\\");\\n        }\\n      }\\n\\n      patients[_patient].requestedDoctors.push(msg.sender);\\n    }\\n\\n    // Doctor retrieves list of patients\\n    function getPatientsList(address _doctor) public view returns(address[] memory) {\\n\\n        return doctors[_doctor].patientsList;\\n    }\\n\\n    // Authorized doctors add record to patient's profile\\n    function addRecord(address _patient, string memory _description, string memory _diagnosis, string memory _treatment, string memory _imageUrl) public onlyAuthorizedDoctors(_patient) {\\n\\n        require(isDoctor[msg.sender], \\\"Only doctors can create new record\\\");\\n        require(isPatient[_patient], \\\"That address is not a patient\\\");\\n\\n        Patient storage patient = patients[_patient];\\n\\n        patient.records.push(Record({\\n            id: patient.recordCount,\\n            description: _description,\\n            diagnosis: _diagnosis,\\n            treatment: _treatment,\\n            imageUrl: _imageUrl,\\n            createdTimestamp: block.timestamp\\n        }));\\n\\n        patient.recordCount++;\\n\\n        emit RecordAdded(_patient, msg.sender, block.timestamp);\\n    }\\n\\n    // Retrieve requested appointments\\n    function getRequestedAppointments(address _doctor) public view returns(Appointment[] memory) {\\n\\n        require (isDoctor[_doctor], \\\"Only doctors can access requested appointments\\\");\\n\\n        return doctors[_doctor].requestedAppointments;\\n    }\\n\\n    // Accept appointment\\n    function acceptAppointment(address _patient) public {\\n        \\n        require(isDoctor[msg.sender], \\\"Only doctors can accept appointments\\\");\\n\\n        Appointment[] storage requested = doctors[msg.sender].requestedAppointments;\\n\\n        for (uint i = 0; i < requested.length; i++) {\\n            if (requested[i].patientaddr == _patient) {\\n\\n                sortAppointments(doctors[msg.sender].appointments, requested[i]);\\n                sortAppointments(patients[_patient].appointments, requested[i]);\\n\\n                requested[i] = requested[requested.length - 1];\\n                requested.pop();\\n\\n                break;\\n            }\\n        }\\n    }\\n\\n    // Sort appointments according to time\\n    function sortAppointments(Appointment[] storage appointments, Appointment memory requested) private {\\n\\n        uint point = 0;\\n        bool shift = false;\\n\\n        for (uint i = 0; i < appointments.length; i++) {\\n            if (requested.date < appointments[i].date || (requested.date == appointments[i].date && requested.time <= appointments[i].time)) {\\n                point = i;\\n                shift = true;\\n                break;\\n            }\\n        }\\n\\n        appointments.push(requested);\\n\\n        if (shift == true) {\\n\\n            for (uint i = appointments.length - 1; i > point; i--) {\\n                appointments[i] = appointments[i - 1];\\n            }\\n\\n            appointments[point] = requested;\\n        }\\n    }\\n}\",\"keccak256\":\"0xa2045ed7aab5b5349e42ef8bca09e5c41cb3cf2b71be1a2d3cdb17d7a791a544\",\"license\":\"MIT\"},\"contracts/HealthcareSystem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"./Structures.sol\\\";\\nimport \\\"./DoctorManagement.sol\\\";\\nimport \\\"./PatientManagement.sol\\\";\\nimport \\\"./AdminManagement.sol\\\";\\n\\ncontract HealthcareSystem is Structures, DoctorManagement, PatientManagement, AdminManagement {\\n\\n    constructor () {\\n        isAdmin[0x49745EF0F5E06f3e0d3F6CcB590F100726202011] = true;\\n    }\\n\\n// Functions for both\\n\\n    // Get appointments\\n    function getAppointments(address _addr) public view returns(Appointment[] memory) {\\n        if (isPatient[_addr]) {\\n            return patients[_addr].appointments;\\n        } else if (isDoctor[_addr]) {\\n            return doctors[_addr].appointments;\\n        }\\n\\n        Appointment[] memory emptyAppointments = new Appointment[](0);\\n\\n        return emptyAppointments;\\n    }\\n\\n    // Get Patient's info\\n    function getPatientInfo(address _doctor, address _patient) public view\\n        returns(\\n            string memory name,\\n            string memory phone,\\n            string memory dob,\\n            string memory gender,\\n            string memory bloodType,\\n            string memory height,\\n            string memory weight,\\n            string memory houseAddr,\\n            string memory allergies,\\n            Record[] memory records,\\n            uint recordCount\\n        ) \\n    {\\n\\n        if (isDoctor[_doctor]) {\\n            require(patients[_patient].authorizedDoctors[_doctor], \\\"You need to be authorized to view this patient's record\\\");\\n        } else {\\n            require(_doctor == _patient);   // Both address is from the patient, who want to view their own record\\n        }\\n\\n        Patient storage patient = patients[_patient];\\n\\n        return (\\n            patient.name,\\n            patient.phone,\\n            patient.dob,\\n            patient.gender,\\n            patient.bloodType,\\n            patient.height,\\n            patient.weight,\\n            patient.houseAddr,\\n            patient.allergies,\\n            patient.records,\\n            patient.recordCount\\n        );\\n    }\\n\\n    // Get Doctor's info\\n    function getDoctorInfo(address _patient, address _doctor) public view \\n        returns(\\n            string memory name,\\n            string memory major\\n        ) \\n    {\\n        if (isDoctor[_doctor]  && isPatient[_patient]) {\\n            require(patients[_patient].authorizedDoctors[_doctor], \\\"This doctor is not authorized to work with you\\\");\\n        } else {\\n            require(_doctor == _patient);   // Both address is from the doctor, who want to view their own profle or the admin\\n        }\\n        \\n\\n        Doctor storage doctor = doctors[_doctor];\\n\\n        return (\\n            doctor.name,\\n            doctor.major\\n        );\\n    }\\n}\",\"keccak256\":\"0x459f4d168af6f4b618f2d305183a37e3fb9bf071e685bcfcfc1f3d4617c4f548\",\"license\":\"MIT\"},\"contracts/PatientManagement.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"./Structures.sol\\\";\\n\\ncontract PatientManagement is Structures {\\n\\n    // Patients set their profile\\n    function setPatientProfile(\\n        string memory _name,\\n        string memory _phone,\\n        string memory _dob,\\n        string memory _gender,\\n        string memory _bloodType,\\n        string memory _height,\\n        string memory _weight,\\n        string memory _houseAddr,\\n        string memory _allergies\\n    ) public payable {\\n        require(!isPatient[msg.sender], \\\"Patient profile already exists\\\");\\n        require(!isDoctor[msg.sender], \\\"You are already a doctor!\\\");\\n\\n        Patient storage patient = patients[msg.sender];\\n\\n        patient.name = _name;\\n        patient.phone = _phone;\\n        patient.dob = _dob;\\n        patient.gender = _gender;\\n        patient.bloodType = _bloodType;\\n        patient.height = _height;\\n        patient.weight = _weight;\\n        patient.houseAddr = _houseAddr;\\n        patient.allergies = _allergies;\\n        patient.recordCount = 0;\\n\\n        isPatient[msg.sender] = true;\\n\\n        patientList.push(msg.sender);\\n    }\\n\\n    // Patient retrieves requested doctors\\n    function getRequestedDoctors(address _patient) public view returns(address[] memory) {\\n\\n        //require(isPatient[_patient], \\\"This should be a patient\\\");\\n\\n        Patient storage patient = patients[_patient];\\n\\n        return patient.requestedDoctors;\\n    }\\n\\n    // Patients grant access to doctors\\n    function grantAccess(address _doctor) public {\\n\\n        require(isPatient[msg.sender], \\\"Only patients can grant access\\\");\\n\\n        address[] storage requested = patients[msg.sender].requestedDoctors;\\n\\n        bool check = false;\\n\\n        for (uint i = 0; i < requested.length; i++) {\\n          if (requested[i] == _doctor) {\\n            requested[i] = requested[requested.length - 1];\\n            requested.pop();\\n            check = true;\\n            break;\\n          }\\n        }\\n\\n        if (check == true) {\\n            patients[msg.sender].authorizedDoctors[_doctor] = true;       // Authorize this doctor\\n\\n            doctors[_doctor].patientsList.push(msg.sender);               // Add this patient to the list of the doctor\\n\\n            patients[msg.sender].doctorsList.push(_doctor);              // Add this doctor to the list of the patient\\n\\n        } else {\\n            emit GrantAccessFailed(msg.sender, _doctor);\\n        }\\n    }\\n\\n    // Patients revoke access to doctors\\n    function revokeAccess(address _doctors) public {\\n\\n        require(isPatient[msg.sender], \\\"Only patients can revoke access\\\");\\n\\n        patients[msg.sender].authorizedDoctors[_doctors] = false;\\n    }\\n\\n    // Patient retrieves list of doctors\\n    function getDoctorsList(address _patient) public view returns(address[] memory) {\\n\\n        Patient storage patient = patients[_patient];\\n\\n        return patient.doctorsList;\\n    }\\n\\n    // Request Appointments\\n    function requestAppointment(address _doctor, uint _date, uint _time, string memory _description) public {\\n\\n        require(patients[msg.sender].authorizedDoctors[_doctor], \\\"This doctor is not authorized to work with you\\\");\\n\\n        Doctor storage doctor = doctors[_doctor];\\n\\n        for (uint i = 0; i < doctor.requestedAppointments.length; i++) {\\n            if (msg.sender == doctor.requestedAppointments[i].patientaddr) {\\n                revert (\\\"You already requested this doctor\\\");\\n            }\\n        }\\n\\n        for (uint i = 0; i < doctor.appointments.length; i++) {\\n            if (msg.sender == doctor.appointments[i].patientaddr) {\\n                revert (\\\"You already have an appointment with this doctor\\\");\\n            }\\n        }\\n\\n        doctor.requestedAppointments.push(Appointment ({\\n            patientaddr: msg.sender,\\n            doctoraddr: _doctor,\\n            date: _date,\\n            time: _time,\\n            description: _description\\n        }));\\n    }\\n}\",\"keccak256\":\"0xe92324a99751bf2b47c8c86b1c4b8e283f9380e17f880097d39129280098d9c5\",\"license\":\"MIT\"},\"contracts/Structures.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\ncontract Structures {\\n    struct Patient {\\n        string name;\\n        string phone;\\n        string dob;\\n        string gender;\\n        string bloodType;\\n        string height;\\n        string weight;\\n        string houseAddr;\\n        string allergies;\\n        Record[] records;\\n        uint recordCount;\\n        mapping(address => bool) authorizedDoctors;\\n        address[] requestedDoctors;\\n        address[] doctorsList;\\n        Appointment[] appointments;\\n    }\\n\\n    struct Doctor {\\n        string name;\\n        string major;\\n        address[] patientsList;\\n        Appointment[] requestedAppointments;\\n        Appointment[] appointments;\\n    }\\n\\n    struct Admin {\\n        string name;\\n    }\\n\\n    struct Record {\\n        uint id;\\n        string description;\\n        string diagnosis;\\n        string treatment;\\n        string imageUrl;\\n        uint createdTimestamp;\\n    }\\n\\n    struct Appointment {\\n        address patientaddr;\\n        address doctoraddr;\\n        uint date;\\n        uint time;\\n        string description;\\n    }\\n\\n    address[] public patientList;\\n    address[] public doctorList;\\n    address[] public requestedDoctorList;\\n\\n    mapping(address => Patient) public patients;\\n    mapping(address => Doctor) public doctors;\\n\\n    mapping(address => bool) public isDoctor;\\n    mapping(address => bool) public isPatient;\\n    mapping(address => bool) public isAdmin;\\n\\n    event RecordAdded(address patient, address doctor, uint timestamp);\\n    event RecordUpdated(address patient, address doctor, uint timestamp);\\n    event GrantAccessFailed(address patient, address doctor);\\n    event AppointmentRequested(address patient, address doctor, string date, string time);\\n\\n    // Check if the healthcare doctors are authorized\\n    modifier onlyAuthorizedDoctors(address _patient) {\\n        require(\\n            patients[_patient].authorizedDoctors[msg.sender],\\n            \\\"You are not authorized to view this record\\\"\\n        );\\n        _;\\n    }\\n\\n    // Only the admin is authorized\\n    modifier onlyAdmin(address _admin) {\\n      require(_admin == 0x49745EF0F5E06f3e0d3F6CcB590F100726202011, \\\"Not authorized: Only the admin can perform this action\\\");\\n      _;\\n    }\\n}\",\"keccak256\":\"0x9d6c7fc5ab6fad26e79d3445430af6f16015493f84a3b641e056e325a66393a3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b507349745ef0f5e06f3e0d3f6ccb590f10072620201160005260076020527f48b08e5f3c49f731e7b143bc022c0d04fcffcb18c2480d9d267e33a215e3df1e805460ff191660011790556145c1806100696000396000f3fe6080604052600436106101c25760003560e01c80637b75cfb6116100f7578063babb1d4111610095578063d5c0f66e11610064578063d5c0f66e1461056f578063db9bc7bd146105a6578063eb5b3219146105c6578063f1de9716146105e657600080fd5b8063babb1d41146104ef578063be7306c31461050f578063c2013ba51461052f578063d18dbe251461054f57600080fd5b806395b500e5116100d157806395b500e51461045e578063996440c614610471578063a64fc9bd146104a1578063a9583c22146104cf57600080fd5b80637b75cfb6146103e157806385e685311461040e5780638f9c79ed1461042e57600080fd5b8063283e889411610164578063413e63ad1161013e578063413e63ad14610353578063576039341461037357806368d698aa146103935780636d6c532e146103b357600080fd5b8063283e8894146102f35780632da451a5146103135780632f7c85cb1461034057600080fd5b8063127ca4b4116101a0578063127ca4b41461023b5780631d3efcf3146102735780631fe8bb6a1461029357806324d7806c146102b357600080fd5b8063022cb271146101c75780630869cfbc146101dc5780630ae5e7391461021b575b600080fd5b6101da6101d5366004613a58565b610606565b005b3480156101e857600080fd5b506101fc6101f7366004613a58565b610865565b6040516102129a99989796959493929190613ac0565b60405180910390f35b34801561022757600080fd5b506101da610236366004613a58565b610d79565b34801561024757600080fd5b5061025b610256366004613b8e565b610fcb565b6040516001600160a01b039091168152602001610212565b34801561027f57600080fd5b506101da61028e366004613a58565b610ff5565b34801561029f57600080fd5b506101da6102ae366004613a58565b611284565b3480156102bf57600080fd5b506102e36102ce366004613a58565b60076020526000908152604090205460ff1681565b6040519015158152602001610212565b3480156102ff57600080fd5b506101da61030e366004613c4a565b611639565b34801561031f57600080fd5b5061033361032e366004613a58565b61189e565b6040516102129190613cab565b6101da61034e366004613cf8565b611941565b34801561035f57600080fd5b506101da61036e366004613e5d565b611b03565b34801561037f57600080fd5b5061033361038e366004613a58565b611d91565b34801561039f57600080fd5b506101da6103ae366004613a58565b611e31565b3480156103bf57600080fd5b506103d36103ce366004613f1b565b612174565b604051610212929190613f4e565b3480156103ed57600080fd5b506104016103fc366004613a58565b61236e565b6040516102129190613f7c565b34801561041a57600080fd5b506101da610429366004613a58565b612698565b34801561043a57600080fd5b506102e3610449366004613a58565b60066020526000908152604090205460ff1681565b6101da61046c36600461401d565b612729565b34801561047d57600080fd5b506102e361048c366004613a58565b60056020526000908152604090205460ff1681565b3480156104ad57600080fd5b506104c16104bc366004613a58565b6128fc565b604051908152602001610212565b3480156104db57600080fd5b506103d36104ea366004613a58565b612945565b3480156104fb57600080fd5b5061025b61050a366004613b8e565b612a71565b34801561051b57600080fd5b5061040161052a366004613a58565b612a81565b34801561053b57600080fd5b5061025b61054a366004613b8e565b612c35565b34801561055b57600080fd5b5061033361056a366004613a58565b612c45565b34801561057b57600080fd5b5061058f61058a366004613f1b565b612cbf565b6040516102129b9a99989796959493929190614148565b3480156105b257600080fd5b506103336105c1366004613a58565b613601565b3480156105d257600080fd5b506104c16105e1366004613a58565b61367b565b3480156105f257600080fd5b50610333610601366004613a58565b6136c4565b3360009081526005602052604090205460ff1661066a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920646f63746f72732063616e2072657175657374206163636573730060448201526064015b60405180910390fd5b6001600160a01b03811660009081526006602052604090205460ff166106d25760405162461bcd60e51b815260206004820152601f60248201527f54686520616464726573732073686f756c6420626520612070617469656e74006044820152606401610661565b6001600160a01b0381166000908152600360205260408120905b600c8201548110156107825781600c01818154811061070d5761070d61422c565b6000918252602090912001546001600160a01b031633036107705760405162461bcd60e51b815260206004820181905260248201527f596f75206861766520616c7265616479207265717569726564206163636573736044820152606401610661565b8061077a81614258565b9150506106ec565b5060005b600d8201548110156108275781600d0181815481106107a7576107a761422c565b6000918252602090912001546001600160a01b031633036108155760405162461bcd60e51b815260206004820152602260248201527f596f752061726520616c726561647920696e2074686520646f63746f72206c696044820152611cdd60f21b6064820152608401610661565b8061081f81614258565b915050610786565b50506001600160a01b031660009081526003602090815260408220600c01805460018101825590835291200180546001600160a01b03191633179055565b60036020526000908152604090208054819061088090614271565b80601f01602080910402602001604051908101604052809291908181526020018280546108ac90614271565b80156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b50505050509080600101805461090e90614271565b80601f016020809104026020016040519081016040528092919081815260200182805461093a90614271565b80156109875780601f1061095c57610100808354040283529160200191610987565b820191906000526020600020905b81548152906001019060200180831161096a57829003601f168201915b50505050509080600201805461099c90614271565b80601f01602080910402602001604051908101604052809291908181526020018280546109c890614271565b8015610a155780601f106109ea57610100808354040283529160200191610a15565b820191906000526020600020905b8154815290600101906020018083116109f857829003601f168201915b505050505090806003018054610a2a90614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5690614271565b8015610aa35780601f10610a7857610100808354040283529160200191610aa3565b820191906000526020600020905b815481529060010190602001808311610a8657829003601f168201915b505050505090806004018054610ab890614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae490614271565b8015610b315780601f10610b0657610100808354040283529160200191610b31565b820191906000526020600020905b815481529060010190602001808311610b1457829003601f168201915b505050505090806005018054610b4690614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7290614271565b8015610bbf5780601f10610b9457610100808354040283529160200191610bbf565b820191906000526020600020905b815481529060010190602001808311610ba257829003601f168201915b505050505090806006018054610bd490614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0090614271565b8015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b505050505090806007018054610c6290614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8e90614271565b8015610cdb5780601f10610cb057610100808354040283529160200191610cdb565b820191906000526020600020905b815481529060010190602001808311610cbe57829003601f168201915b505050505090806008018054610cf090614271565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1c90614271565b8015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b50505050509080600a015490508a565b3360009081526006602052604090205460ff16610dd85760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792070617469656e74732063616e206772616e742061636365737300006044820152606401610661565b336000908152600360205260408120600c0190805b8254811015610ef757836001600160a01b0316838281548110610e1257610e1261422c565b6000918252602090912001546001600160a01b031603610ee55782548390610e3c906001906142a5565b81548110610e4c57610e4c61422c565b9060005260206000200160009054906101000a90046001600160a01b0316838281548110610e7c57610e7c61422c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480610eba57610eba6142be565b600082815260209020810160001990810180546001600160a01b031916905501905560019150610ef7565b80610eef81614258565b915050610ded565b50801515600103610f84573360008181526003602081815260408084206001600160a01b038916808652600b82018452828620805460ff1916600190811790915560048552928620600201805480850182559087528487200180546001600160a01b03199081169098179055938352600d0180549182018155845292209091018054909216179055505050565b604080513381526001600160a01b03851660208201527f079318ead522bc53bbcfe85439620d0e662061bc75d29ffc5764bce535c44e54910160405180910390a15b505050565b60018181548110610fdb57600080fd5b6000918252602090912001546001600160a01b0316905081565b337349745ef0f5e06f3e0d3f6ccb590f10072620201181146110295760405162461bcd60e51b8152600401610661906142d4565b6001600160a01b03821660009081526005602052604090205460ff16156110925760405162461bcd60e51b815260206004820152601f60248201527f5468697320706572736f6e20697320616c7265616479206120646f63746f72006044820152606401610661565b6000805b60025481101561118a57836001600160a01b0316600282815481106110bd576110bd61422c565b6000918252602090912001546001600160a01b0316036110dc57600191505b60018215151480156110fb57506002546110f8906001906142a5565b81105b1561117857600261110d82600161432a565b8154811061111d5761111d61422c565b600091825260209091200154600280546001600160a01b0390921691839081106111495761114961422c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061118281614258565b915050611096565b50600280548061119c5761119c6142be565b600082815260208120820160001990810180546001600160a01b0319169055909101909155811515900361121e5760405162461bcd60e51b815260206004820152602360248201527f54686973206164647265737320686173206e6f742072656769737465726564206044820152621e595d60ea1b6064820152608401610661565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0386166001600160a01b031990911681179091556000908152600560205260409020805460ff19169091179055505050565b337349745ef0f5e06f3e0d3f6ccb590f10072620201181146112b85760405162461bcd60e51b8152600401610661906142d4565b6001600160a01b03821660009081526005602052604090205460ff166113205760405162461bcd60e51b815260206004820152601b60248201527f5468697320706572736f6e206973206e6f74206120646f63746f7200000000006044820152606401610661565b6000805b60015481101561141657836001600160a01b03166001828154811061134b5761134b61422c565b6000918252602090912001546001600160a01b03160361136a57600191505b600182151514801561138857506001805461138591906142a5565b81105b15611404576001611399828261432a565b815481106113a9576113a961422c565b600091825260209091200154600180546001600160a01b0390921691839081106113d5576113d561422c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b8061140e81614258565b915050611324565b506001805480611428576114286142be565b600082815260208120820160001990810180546001600160a01b03191690559091019091555b600054811015611615576003600080838154811061146e5761146e61422c565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182209388168252600b90930190925290205460ff1615611603576000600360008084815481106114c7576114c761422c565b60009182526020808320909101546001600160a01b031683528201929092526040018120600d019150805b82548110156115cd57866001600160a01b03168385815481106115175761151761422c565b6000918252602090912001546001600160a01b03160361153657600191505b8115156001036115bb578261154c85600161432a565b8154811061155c5761155c61422c565b9060005260206000200160009054906101000a90046001600160a01b031683858154811061158c5761158c61422c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b806115c581614258565b9150506114f2565b50818054806115de576115de6142be565b600082815260209020810160001990810180546001600160a01b031916905501905550505b8061160d81614258565b91505061144e565b5050506001600160a01b03166000908152600560205260409020805460ff19169055565b3360009081526003602090815260408083206001600160a01b0388168452600b0190915290205460ff1661167f5760405162461bcd60e51b81526004016106619061433d565b6001600160a01b0384166000908152600460205260408120905b600382015481101561173e578160030181815481106116ba576116ba61422c565b60009182526020909120600590910201546001600160a01b0316330361172c5760405162461bcd60e51b815260206004820152602160248201527f596f7520616c726561647920726571756573746564207468697320646f63746f6044820152603960f91b6064820152608401610661565b8061173681614258565b915050611699565b5060005b60048201548110156117f6578160040181815481106117635761176361422c565b60009182526020909120600590910201546001600160a01b031633036117e45760405162461bcd60e51b815260206004820152603060248201527f596f7520616c7265616479206861766520616e206170706f696e746d656e742060448201526f3bb4ba34103a3434b9903237b1ba37b960811b6064820152608401610661565b806117ee81614258565b915050611742565b506040805160a0810182523381526001600160a01b03878116602080840191825293830188815260608401888152608085018881526003808901805460018181018355600092835299909120885160059092020180549188166001600160a01b0319928316178155955198860180549990971698169790971790945590516002830155519381019390935551909190600482019061189490826143d9565b5050505050505050565b6060817349745ef0f5e06f3e0d3f6ccb590f1007262020116001600160a01b038216146118dd5760405162461bcd60e51b8152600401610661906142d4565b600180548060200260200160405190810160405280929190818152602001828054801561193357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611915575b505050505091505b50919050565b3360009081526006602052604090205460ff16156119a15760405162461bcd60e51b815260206004820152601e60248201527f50617469656e742070726f66696c6520616c72656164792065786973747300006044820152606401610661565b3360009081526005602052604090205460ff1615611a015760405162461bcd60e51b815260206004820152601960248201527f596f752061726520616c7265616479206120646f63746f7221000000000000006044820152606401610661565b33600090815260036020526040902080611a1b8b826143d9565b5060018101611a2a8a826143d9565b5060028101611a3989826143d9565b5060038101611a4888826143d9565b5060048101611a5787826143d9565b5060058101611a6686826143d9565b5060068101611a7585826143d9565b5060078101611a8484826143d9565b5060088101611a9383826143d9565b506000600a90910181905533808252600660205260408220805460ff19166001908117909155825490810183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b0319169091179055505050505050505050565b6001600160a01b0385166000908152600360209081526040808320338452600b01909152902054859060ff16611b8e5760405162461bcd60e51b815260206004820152602a60248201527f596f7520617265206e6f7420617574686f72697a656420746f207669657720746044820152691a1a5cc81c9958dbdc9960b21b6064820152608401610661565b3360009081526005602052604090205460ff16611bf85760405162461bcd60e51b815260206004820152602260248201527f4f6e6c7920646f63746f72732063616e20637265617465206e6577207265636f6044820152611c9960f21b6064820152608401610661565b6001600160a01b03861660009081526006602052604090205460ff16611c605760405162461bcd60e51b815260206004820152601d60248201527f546861742061646472657373206973206e6f7420612070617469656e740000006044820152606401610661565b6001600160a01b0386166000908152600360209081526040808320815160c081018352600a82015481528084018a815292810189905260608101889052608081018790524260a08201526009820180546001818101835591875294909520815160069095020193845591519093919291820190611cdd90826143d9565b5060408201516002820190611cf290826143d9565b5060608201516003820190611d0790826143d9565b5060808201516004820190611d1c90826143d9565b5060a09190910151600590910155600a81018054906000611d3c83614258565b9091555050604080516001600160a01b0389168152336020820152428183015290517f2a680967c69f6209d3a9ef302b99a39671eb37caf395b57c8bdb630eb9eaea579181900360600190a150505050505050565b6060817349745ef0f5e06f3e0d3f6ccb590f1007262020116001600160a01b03821614611dd05760405162461bcd60e51b8152600401610661906142d4565b6002805480602002602001604051908101604052809291908181526020018280548015611933576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611915575050505050915050919050565b3360009081526005602052604090205460ff16611e9c5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920646f63746f72732063616e20616363657074206170706f696e746d604482015263656e747360e01b6064820152608401610661565b336000908152600460205260408120600301905b8154811015610fc657826001600160a01b0316828281548110611ed557611ed561422c565b60009182526020909120600590910201546001600160a01b0316036121625761201c60046000336001600160a01b03166001600160a01b03168152602001908152602001600020600401838381548110611f3157611f3161422c565b60009182526020918290206040805160a081018252600590930290910180546001600160a01b0390811684526001820154169383019390935260028301549082015260038201546060820152600482018054919291608084019190611f9590614271565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc190614271565b801561200e5780601f10611fe35761010080835404028352916020019161200e565b820191906000526020600020905b815481529060010190602001808311611ff157829003601f168201915b50505050508152505061373d565b6001600160a01b0383166000908152600360205260409020825461205091600e0190849084908110611f3157611f3161422c565b81548290612060906001906142a5565b815481106120705761207061422c565b90600052602060002090600502018282815481106120905761209061422c565b60009182526020909120825460059092020180546001600160a01b039283166001600160a01b031991821617825560018085015490830180549190941691161790915560028083015490820155600380830154908201556004808201906120f990840182614499565b509050508180548061210d5761210d6142be565b60008281526020812060056000199093019283020180546001600160a01b03199081168255600182018054909116905560028101829055600381018290559061215960048301826139e6565b50509055505050565b8061216c81614258565b915050611eb0565b6001600160a01b038116600090815260056020526040902054606090819060ff1680156121b957506001600160a01b03841660009081526006602052604090205460ff165b1561220c576001600160a01b0380851660009081526003602090815260408083209387168352600b9093019052205460ff166122075760405162461bcd60e51b81526004016106619061433d565b61222a565b836001600160a01b0316836001600160a01b03161461222a57600080fd5b6001600160a01b0383166000908152600460205260409020805481906001820190829061225690614271565b80601f016020809104026020016040519081016040528092919081815260200182805461228290614271565b80156122cf5780601f106122a4576101008083540402835291602001916122cf565b820191906000526020600020905b8154815290600101906020018083116122b257829003601f168201915b505050505091508080546122e290614271565b80601f016020809104026020016040519081016040528092919081815260200182805461230e90614271565b801561235b5780601f106123305761010080835404028352916020019161235b565b820191906000526020600020905b81548152906001019060200180831161233e57829003601f168201915b5050505050905092509250509250929050565b6001600160a01b03811660009081526006602052604090205460609060ff16156124cf576001600160a01b0382166000908152600360209081526040808320600e0180548251818502810185019093528083529193909284015b828210156124c45760008481526020908190206040805160a0810182526005860290920180546001600160a01b039081168452600182015416938301939093526002830154908201526003820154606082015260048201805491929160808401919061243390614271565b80601f016020809104026020016040519081016040528092919081815260200182805461245f90614271565b80156124ac5780601f10612481576101008083540402835291602001916124ac565b820191906000526020600020905b81548152906001019060200180831161248f57829003601f168201915b505050505081525050815260200190600101906123c8565b505050509050919050565b6001600160a01b03821660009081526005602052604090205460ff1615612623576001600160a01b03821660009081526004602081815260408084209092018054835181840281018401909452808452929390929184015b828210156124c45760008481526020908190206040805160a0810182526005860290920180546001600160a01b039081168452600182015416938301939093526002830154908201526003820154606082015260048201805491929160808401919061259290614271565b80601f01602080910402602001604051908101604052809291908181526020018280546125be90614271565b801561260b5780601f106125e05761010080835404028352916020019161260b565b820191906000526020600020905b8154815290600101906020018083116125ee57829003601f168201915b50505050508152505081526020019060010190612527565b6040805160008082526020820190925281612690565b61267d6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001606081525090565b8152602001906001900390816126395790505b509392505050565b3360009081526006602052604090205460ff166126f75760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c792070617469656e74732063616e207265766f6b6520616363657373006044820152606401610661565b3360009081526003602090815260408083206001600160a01b03949094168352600b909301905220805460ff19169055565b3360009081526005602052604090205460ff16156127895760405162461bcd60e51b815260206004820152601e60248201527f446f63746f722070726f66696c6520616c7265616479206578697374732100006044820152606401610661565b3360009081526006602052604090205460ff16156127e95760405162461bcd60e51b815260206004820152601a60248201527f596f752061726520616c726561647920612070617469656e74210000000000006044820152606401610661565b60005b60025481101561288a57600281815481106128095761280961422c565b6000918252602090912001546001600160a01b031633036128785760405162461bcd60e51b8152602060048201526024808201527f596f7520616c72656164792072657175657374656420746f206265206120646f60448201526331ba37b960e11b6064820152608401610661565b8061288281614258565b9150506127ec565b50336000908152600460205260409020806128a584826143d9565b50600181016128b483826143d9565b5050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b031916331790555050565b6000817349745ef0f5e06f3e0d3f6ccb590f1007262020116001600160a01b0382161461293b5760405162461bcd60e51b8152600401610661906142d4565b5050600054919050565b60046020526000908152604090208054819061296090614271565b80601f016020809104026020016040519081016040528092919081815260200182805461298c90614271565b80156129d95780601f106129ae576101008083540402835291602001916129d9565b820191906000526020600020905b8154815290600101906020018083116129bc57829003601f168201915b5050505050908060010180546129ee90614271565b80601f0160208091040260200160405190810160405280929190818152602001828054612a1a90614271565b8015612a675780601f10612a3c57610100808354040283529160200191612a67565b820191906000526020600020905b815481529060010190602001808311612a4a57829003601f168201915b5050505050905082565b60008181548110610fdb57600080fd5b6001600160a01b03811660009081526005602052604090205460609060ff16612b035760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920646f63746f72732063616e2061636365737320726571756573746560448201526d64206170706f696e746d656e747360901b6064820152608401610661565b6001600160a01b038216600090815260046020908152604080832060030180548251818502810185019093528083529193909284015b828210156124c45760008481526020908190206040805160a0810182526005860290920180546001600160a01b0390811684526001820154169383019390935260028301549082015260038201546060820152600482018054919291608084019190612ba490614271565b80601f0160208091040260200160405190810160405280929190818152602001828054612bd090614271565b8015612c1d5780601f10612bf257610100808354040283529160200191612c1d565b820191906000526020600020905b815481529060010190602001808311612c0057829003601f168201915b50505050508152505081526020019060010190612b39565b60028181548110610fdb57600080fd5b6001600160a01b038116600090815260036020908152604091829020600d810180548451818502810185019095528085526060949293830182828015611933576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611915575050505050915050919050565b6001600160a01b03821660009081526005602052604081205460609182918291829182918291829182918291829160ff1615612dc557600360008d6001600160a01b03166001600160a01b03168152602001908152602001600020600b0160008e6001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a900460ff16612dc05760405162461bcd60e51b815260206004820152603760248201527f596f75206e65656420746f20626520617574686f72697a656420746f2076696560448201527f7720746869732070617469656e742773207265636f72640000000000000000006064820152608401610661565b612de3565b8b6001600160a01b03168d6001600160a01b031614612de357600080fd5b6000600360008e6001600160a01b03166001600160a01b031681526020019081526020016000209050806000018160010182600201836003018460040185600501866006018760070188600801896009018a600a01548a8054612e4590614271565b80601f0160208091040260200160405190810160405280929190818152602001828054612e7190614271565b8015612ebe5780601f10612e9357610100808354040283529160200191612ebe565b820191906000526020600020905b815481529060010190602001808311612ea157829003601f168201915b50505050509a50898054612ed190614271565b80601f0160208091040260200160405190810160405280929190818152602001828054612efd90614271565b8015612f4a5780601f10612f1f57610100808354040283529160200191612f4a565b820191906000526020600020905b815481529060010190602001808311612f2d57829003601f168201915b50505050509950888054612f5d90614271565b80601f0160208091040260200160405190810160405280929190818152602001828054612f8990614271565b8015612fd65780601f10612fab57610100808354040283529160200191612fd6565b820191906000526020600020905b815481529060010190602001808311612fb957829003601f168201915b50505050509850878054612fe990614271565b80601f016020809104026020016040519081016040528092919081815260200182805461301590614271565b80156130625780601f1061303757610100808354040283529160200191613062565b820191906000526020600020905b81548152906001019060200180831161304557829003601f168201915b5050505050975086805461307590614271565b80601f01602080910402602001604051908101604052809291908181526020018280546130a190614271565b80156130ee5780601f106130c3576101008083540402835291602001916130ee565b820191906000526020600020905b8154815290600101906020018083116130d157829003601f168201915b5050505050965085805461310190614271565b80601f016020809104026020016040519081016040528092919081815260200182805461312d90614271565b801561317a5780601f1061314f5761010080835404028352916020019161317a565b820191906000526020600020905b81548152906001019060200180831161315d57829003601f168201915b5050505050955084805461318d90614271565b80601f01602080910402602001604051908101604052809291908181526020018280546131b990614271565b80156132065780601f106131db57610100808354040283529160200191613206565b820191906000526020600020905b8154815290600101906020018083116131e957829003601f168201915b5050505050945083805461321990614271565b80601f016020809104026020016040519081016040528092919081815260200182805461324590614271565b80156132925780601f1061326757610100808354040283529160200191613292565b820191906000526020600020905b81548152906001019060200180831161327557829003601f168201915b505050505093508280546132a590614271565b80601f01602080910402602001604051908101604052809291908181526020018280546132d190614271565b801561331e5780601f106132f35761010080835404028352916020019161331e565b820191906000526020600020905b81548152906001019060200180831161330157829003601f168201915b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156135d457838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461338390614271565b80601f01602080910402602001604051908101604052809291908181526020018280546133af90614271565b80156133fc5780601f106133d1576101008083540402835291602001916133fc565b820191906000526020600020905b8154815290600101906020018083116133df57829003601f168201915b5050505050815260200160028201805461341590614271565b80601f016020809104026020016040519081016040528092919081815260200182805461344190614271565b801561348e5780601f106134635761010080835404028352916020019161348e565b820191906000526020600020905b81548152906001019060200180831161347157829003601f168201915b505050505081526020016003820180546134a790614271565b80601f01602080910402602001604051908101604052809291908181526020018280546134d390614271565b80156135205780601f106134f557610100808354040283529160200191613520565b820191906000526020600020905b81548152906001019060200180831161350357829003601f168201915b5050505050815260200160048201805461353990614271565b80601f016020809104026020016040519081016040528092919081815260200182805461356590614271565b80156135b25780601f10613587576101008083540402835291602001916135b2565b820191906000526020600020905b81548152906001019060200180831161359557829003601f168201915b5050505050815260200160058201548152505081526020019060010190613346565b5050505091509b509b509b509b509b509b509b509b509b509b509b50509295989b509295989b9093969950565b6001600160a01b038116600090815260036020908152604091829020600c810180548451818502810185019095528085526060949293830182828015611933576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611915575050505050915050919050565b6000817349745ef0f5e06f3e0d3f6ccb590f1007262020116001600160a01b038216146136ba5760405162461bcd60e51b8152600401610661906142d4565b5050600154919050565b6001600160a01b03811660009081526004602090815260409182902060020180548351818402810184019094528084526060939283018282801561373157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613713575b50505050509050919050565b60008060005b84548110156137fc5784818154811061375e5761375e61422c565b906000526020600020906005020160020154846040015110806137d9575084818154811061378e5761378e61422c565b90600052602060002090600502016002015484604001511480156137d957508481815481106137bf576137bf61422c565b906000526020600020906005020160030154846060015111155b156137ea57809250600191506137fc565b806137f481614258565b915050613743565b508354600180820186556000868152602090819020865160059094020180546001600160a01b03199081166001600160a01b039586161782559187015192810180549092169290931691909117905560408401516002820155606084015160038201556080840151849190600482019061387690826143d9565b5050508015156001036139e0578354600090613894906001906142a5565b90505b8281111561395b57846138ab6001836142a5565b815481106138bb576138bb61422c565b90600052602060002090600502018582815481106138db576138db61422c565b60009182526020909120825460059092020180546001600160a01b039283166001600160a01b0319918216178255600180850154908301805491909416911617909155600280830154908201556003808301549082015560048082019061394490840182614499565b50905050808061395390614574565b915050613897565b508284838154811061396f5761396f61422c565b6000918252602091829020835160059092020180546001600160a01b039283166001600160a01b0319918216178255928401516001820180549190931693169290921790556040820151600282015560608201516003820155608082015160048201906139dc90826143d9565b5050505b50505050565b5080546139f290614271565b6000825580601f10613a02575050565b601f016020900490600052602060002090810190613a209190613a23565b50565b5b80821115613a385760008155600101613a24565b5090565b80356001600160a01b0381168114613a5357600080fd5b919050565b600060208284031215613a6a57600080fd5b613a7382613a3c565b9392505050565b6000815180845260005b81811015613aa057602081850181015186830182015201613a84565b506000602082860101526020601f19601f83011685010191505092915050565b6000610140808352613ad48184018e613a7a565b90508281036020840152613ae8818d613a7a565b90508281036040840152613afc818c613a7a565b90508281036060840152613b10818b613a7a565b90508281036080840152613b24818a613a7a565b905082810360a0840152613b388189613a7a565b905082810360c0840152613b4c8188613a7a565b905082810360e0840152613b608187613a7a565b9050828103610100840152613b758186613a7a565b915050826101208301529b9a5050505050505050505050565b600060208284031215613ba057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112613bce57600080fd5b813567ffffffffffffffff80821115613be957613be9613ba7565b604051601f8301601f19908116603f01168101908282118183101715613c1157613c11613ba7565b81604052838152866020858801011115613c2a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215613c6057600080fd5b613c6985613a3c565b93506020850135925060408501359150606085013567ffffffffffffffff811115613c9357600080fd5b613c9f87828801613bbd565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015613cec5783516001600160a01b031683529284019291840191600101613cc7565b50909695505050505050565b60008060008060008060008060006101208a8c031215613d1757600080fd5b893567ffffffffffffffff80821115613d2f57600080fd5b613d3b8d838e01613bbd565b9a5060208c0135915080821115613d5157600080fd5b613d5d8d838e01613bbd565b995060408c0135915080821115613d7357600080fd5b613d7f8d838e01613bbd565b985060608c0135915080821115613d9557600080fd5b613da18d838e01613bbd565b975060808c0135915080821115613db757600080fd5b613dc38d838e01613bbd565b965060a08c0135915080821115613dd957600080fd5b613de58d838e01613bbd565b955060c08c0135915080821115613dfb57600080fd5b613e078d838e01613bbd565b945060e08c0135915080821115613e1d57600080fd5b613e298d838e01613bbd565b93506101008c0135915080821115613e4057600080fd5b50613e4d8c828d01613bbd565b9150509295985092959850929598565b600080600080600060a08688031215613e7557600080fd5b613e7e86613a3c565b9450602086013567ffffffffffffffff80821115613e9b57600080fd5b613ea789838a01613bbd565b95506040880135915080821115613ebd57600080fd5b613ec989838a01613bbd565b94506060880135915080821115613edf57600080fd5b613eeb89838a01613bbd565b93506080880135915080821115613f0157600080fd5b50613f0e88828901613bbd565b9150509295509295909350565b60008060408385031215613f2e57600080fd5b613f3783613a3c565b9150613f4560208401613a3c565b90509250929050565b604081526000613f616040830185613a7a565b8281036020840152613f738185613a7a565b95945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561400f57888303603f19018552815180516001600160a01b03908116855288820151168885015286810151878501526060808201519085015260809081015160a091850182905290613ffb81860183613a7a565b968901969450505090860190600101613fa3565b509098975050505050505050565b6000806040838503121561403057600080fd5b823567ffffffffffffffff8082111561404857600080fd5b61405486838701613bbd565b9350602085013591508082111561406a57600080fd5b5061407785828601613bbd565b9150509250929050565b600081518084526020808501808196508360051b8101915082860160005b8581101561413b578284038952815160c0815186528682015181888801526140c982880182613a7a565b915050604080830151878303828901526140e38382613a7a565b92505050606080830151878303828901526140fe8382613a7a565b92505050608080830151878303828901526141198382613a7a565b60a094850151989094019790975250509885019893509084019060010161409f565b5091979650505050505050565b600061016080835261415c8184018f613a7a565b90508281036020840152614170818e613a7a565b90508281036040840152614184818d613a7a565b90508281036060840152614198818c613a7a565b905082810360808401526141ac818b613a7a565b905082810360a08401526141c0818a613a7a565b905082810360c08401526141d48189613a7a565b905082810360e08401526141e88188613a7a565b90508281036101008401526141fd8187613a7a565b90508281036101208401526142128186614081565b915050826101408301529c9b505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161426a5761426a614242565b5060010190565b600181811c9082168061428557607f821691505b60208210810361193b57634e487b7160e01b600052602260045260246000fd5b818103818111156142b8576142b8614242565b92915050565b634e487b7160e01b600052603160045260246000fd5b60208082526036908201527f4e6f7420617574686f72697a65643a204f6e6c79207468652061646d696e206360408201527530b7103832b93337b936903a3434b99030b1ba34b7b760511b606082015260800190565b808201808211156142b8576142b8614242565b6020808252602e908201527f5468697320646f63746f72206973206e6f7420617574686f72697a656420746f60408201526d20776f726b207769746820796f7560901b606082015260800190565b601f821115610fc657600081815260208120601f850160051c810160208610156143b25750805b601f850160051c820191505b818110156143d1578281556001016143be565b505050505050565b815167ffffffffffffffff8111156143f3576143f3613ba7565b614407816144018454614271565b8461438b565b602080601f83116001811461443c57600084156144245750858301515b600019600386901b1c1916600185901b1785556143d1565b600085815260208120601f198616915b8281101561446b5788860151825594840194600190910190840161444c565b50858210156144895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181036144a4575050565b6144ae8254614271565b67ffffffffffffffff8111156144c6576144c6613ba7565b6144d4816144018454614271565b6000601f82116001811461450857600083156144f05750848201545b600019600385901b1c1916600184901b17845561456d565b600085815260209020601f19841690600086815260209020845b838110156145425782860154825560019586019590910190602001614522565b50858310156145605781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b60008161458357614583614242565b50600019019056fea26469706673582212207dffa0c060954c35649a9ae7400900f00625d29fe05b9af6328d4a6ff8ad690864736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1483,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "patientList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1486,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "doctorList",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1489,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "requestedDoctorList",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1494,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "patients",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Patient)1437_storage)"
      },
      {
        "astId": 1499,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "doctors",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Doctor)1453_storage)"
      },
      {
        "astId": 1503,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "isDoctor",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1507,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "isPatient",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1511,
        "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
        "label": "isAdmin",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Appointment)1480_storage)dyn_storage": {
        "base": "t_struct(Appointment)1480_storage",
        "encoding": "dynamic_array",
        "label": "struct Structures.Appointment[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Record)1469_storage)dyn_storage": {
        "base": "t_struct(Record)1469_storage",
        "encoding": "dynamic_array",
        "label": "struct Structures.Record[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Doctor)1453_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Structures.Doctor)",
        "numberOfBytes": "32",
        "value": "t_struct(Doctor)1453_storage"
      },
      "t_mapping(t_address,t_struct(Patient)1437_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Structures.Patient)",
        "numberOfBytes": "32",
        "value": "t_struct(Patient)1437_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Appointment)1480_storage": {
        "encoding": "inplace",
        "label": "struct Structures.Appointment",
        "members": [
          {
            "astId": 1471,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "patientaddr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1473,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "doctoraddr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1475,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "date",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1477,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "time",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1479,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Doctor)1453_storage": {
        "encoding": "inplace",
        "label": "struct Structures.Doctor",
        "members": [
          {
            "astId": 1439,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1441,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "major",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1444,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "patientsList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1448,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "requestedAppointments",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Appointment)1480_storage)dyn_storage"
          },
          {
            "astId": 1452,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "appointments",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(Appointment)1480_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Patient)1437_storage": {
        "encoding": "inplace",
        "label": "struct Structures.Patient",
        "members": [
          {
            "astId": 1400,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1402,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "phone",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1404,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "dob",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1406,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "gender",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 1408,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "bloodType",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 1410,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "height",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 1412,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "weight",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 1414,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "houseAddr",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 1416,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "allergies",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 1420,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "records",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_struct(Record)1469_storage)dyn_storage"
          },
          {
            "astId": 1422,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "recordCount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1426,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "authorizedDoctors",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1429,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "requestedDoctors",
            "offset": 0,
            "slot": "12",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1432,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "doctorsList",
            "offset": 0,
            "slot": "13",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1436,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "appointments",
            "offset": 0,
            "slot": "14",
            "type": "t_array(t_struct(Appointment)1480_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_struct(Record)1469_storage": {
        "encoding": "inplace",
        "label": "struct Structures.Record",
        "members": [
          {
            "astId": 1458,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1460,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 1462,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "diagnosis",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1464,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "treatment",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 1466,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "imageUrl",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 1468,
            "contract": "contracts/HealthcareSystem.sol:HealthcareSystem",
            "label": "createdTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}